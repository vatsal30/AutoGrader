Intructions to test and train the autograder system

These instructions are for Linux only.

FOR TESTING

The following procedure will produce exactly the same file that I sent to Kaggle for 
the private leaderboard. 
If you wish to train the files neccesary for testing yourself, you can do it following 
the procedure described in the 'FOR TRAINING SECTION'.

1. Copy the file to be tested (private_leaderboard.tsv) to the to the directory /TestFile
2. Change the name of the file to 'test.tsv'

Using the terminal:
3. cd to the folder TestCode 
Type: 
4. Run python3 Linux_finalPredict.py

The final predictions of the file test.tsv will saved in the directory 
/TestCode/finalModel with the name 'finalPrediction.csv'

FOR TRAINING:

Warning: It may take days to be completely trained. To reduce training time, you can change some
of the parameters described in 'PARAMETERS SECTION'. Those changes may also reduce performance.
If you are planning to make these changes, go to the 'PARAMETERS SECTION' before doing any of the
following steps.

1. Copy the training file to the directory /TrainingFile
2. Make sure the name of the training file is 'train_rel_2.tsv', if not, rename it.
Using the terminal:
3. cd to the folder TrainingCode 
Type: 
4. python preProcessData.py
5. Rscript predict_label_boruta.R
6. Rscript predict_label.R
7. Rscript variable_selection.R
8. Rscript modelingRf.R
9. Rscript modelingGbm.R

The files neccesary for testing will be save. To use those files for testing, copy and replace 
all the files from from /newTrainedModelFiles to /alreadySavedModelFiles. 
Then follow the procedure described for testing. It could produce slightly different results 
because of the stochasticity of the Random Forest algorithm.






